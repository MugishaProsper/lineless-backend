spring.application.name=lineless-backend

# JWT Configuration
jwt.secret=your-secret-key-here-make-it-long-and-secure-in-production
jwt.expiration=86400000

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/lineless_db
spring.datasource.username=postgres
spring.datasource.password=\#nelprox92
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Initialize sequence if needed (will only run if update mode)
spring.jpa.properties.hibernate.hbm2ddl.import_files=classpath:init-sequence.sql
spring.jpa.properties.hibernate.hbm2ddl.import_files_sql_extractor=org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor

# Server Configuration
server.port=8000

# Swagger Configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.default-produces-media-type=application/json
springdoc.default-consumes-media-type=application/json
springdoc.sort-parameter-enabled=false
springdoc.packages-to-scan=com.example.linelessbackend.controller
springdoc.paths-to-match=/api/**
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true

# Spring Data REST Configuration
spring.data.rest.detection-strategy=annotated
spring.data.rest.base-path=/api

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:5173
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# WebSocket Configuration
spring.websocket.allowed-origins=http://localhost:5173

# Logging Configuration
logging.level.org.springframework.security=DEBUG
logging.level.com.example.linelessbackend=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
